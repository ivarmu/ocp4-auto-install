---

- name: '[INSTALL_CONFIG] Installing Openshift Cluster...'
  shell:
    cmd: "{{ user_path }}/openshift-install create cluster --dir {{ user_path }} --log-level debug"
    creates: "{{ user_path }}/auth"

- name: '[INSTALL_CONFIG] Check pid of openshift-install'
  pids:
    name: openshift-install
  register: installer_pids

- name: '[INSTALL_CONFIG] Wait for the main installer to finish - may take around 25 minutes'
  wait_for:
    path: "{{ user_path }}/auth/kubeconfig"
    state: present
    timeout: 5400

- name: '[INSTALL_CONFIG] Wait for the Bootstrap'
  shell:
    cmd: "{{ user_path }}/openshift-install wait-for bootstrap-complete --dir {{ user_path }}"

- name: '[INSTALL_CONFIG] Wait for the cluster'
  shell:
    cmd: "{{ user_path }}/openshift-install wait-for install-complete --dir {{ user_path }}"

- name: '[INSTALL_CONFIG] Copy the Kubeconfig to the know location'
  copy:
    src: "{{ user_path }}/auth/kubeconfig"
    dest: "{{ local_kubeconfig }}"
  when:
    - local_kubeconfig is defined

- name: '[INSTALL_CONFIG] Gzip Install files'
  archive:
    path:
      - "{{ user_path }}/.openshift_install_state.json"
      - "{{ user_path }}/.openshift_install.log"
      - "{{ user_path }}/terraform.tfvars.json"
      - "{{ user_path }}/terraform.tfstate"
      - "{{ user_path }}/metadata.json"
      - "{{ user_path }}/terraform.aws.auto.tfvars.json"
      - "{{ user_path }}/openshift-install"
    dest: "{{ tower_path }}/{{ cluster_name }}-install.gz"
    format: gz
  when:
    - tower_used is defined
    - tower_used | bool

